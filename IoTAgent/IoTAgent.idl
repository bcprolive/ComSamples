import "oaidl.idl";

typedef [
 v1_enum, // 32bit enum size
 helpstring("")]
enum Severity {
    Unknown,
    Info,
    Warning,
    Error,
    Fatal,
} Severity;

typedef [
 helpstring("IoT message")]
struct Message {
    Severity sev;

    [helpstring("message creation time")]
    DATE time;

    [helpstring("some value")]
    double value;

    [helpstring("description")]
    BSTR desc;

    [helpstring("color (r,g,b)")]
    BYTE color[3];

    [helpstring("vertex indices for each triangle (read 3 at a time)")]
    SAFEARRAY(BYTE) data;
} Message;

[object,
oleautomation,
uuid(BE3FF6C1-94F5-4974-913C-237C9AB29679),
helpstring("IoT agent client callback interface")]
interface IMyClient : IUnknown {
    [helpstring("Test method")]
    HRESULT PushMessage([in] Message message);
};

[object,
 oleautomation,
 uuid(F586D6F4-AF37-441E-80A6-3D33D977882D),
 helpstring("IoT agent server interface")]
interface IMyServer : IUnknown {
    [helpstring("Test method")]
    HRESULT ComputePi([out, retval] double *ret);

    [helpstring("Subscribe to callbacks")]
    HRESULT Subscribe([in] IMyClient* client);

    [helpstring("Unsubscribe to callbacks")]
    HRESULT Unsubscribe([in] IMyClient* client);
};

[uuid(46F3FEB2-121D-4830-AA22-0CDA9EA90DC3)]
library IoTAgent {
    [uuid(AF080472-F173-4D9D-8BE7-435776617347)]
    coclass MyServer {
        [default] interface IMyServer;
    }
}
